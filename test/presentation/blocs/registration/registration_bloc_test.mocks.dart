// Mocks generated by Mockito 5.4.6 from annotations
// in tourlicity_app/test/presentation/blocs/registration/registration_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:tourlicity_app/core/network/api_result.dart' as _i4;
import 'package:tourlicity_app/domain/entities/registration.dart' as _i5;
import 'package:tourlicity_app/domain/repositories/registration_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RegistrationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegistrationRepository extends _i1.Mock
    implements _i2.RegistrationRepository {
  MockRegistrationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> registerForTour({
    required String? joinCode,
    required String? touristId,
    String? specialRequirements,
    String? emergencyContactName,
    String? emergencyContactPhone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerForTour,
          [],
          {
            #joinCode: joinCode,
            #touristId: touristId,
            #specialRequirements: specialRequirements,
            #emergencyContactName: emergencyContactName,
            #emergencyContactPhone: emergencyContactPhone,
          },
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #registerForTour,
            [],
            {
              #joinCode: joinCode,
              #touristId: touristId,
              #specialRequirements: specialRequirements,
              #emergencyContactName: emergencyContactName,
              #emergencyContactPhone: emergencyContactPhone,
            },
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> getRegistrationById(
          String? registrationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegistrationById,
          [registrationId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #getRegistrationById,
            [registrationId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i5.Registration>>> getRegistrationsByTourist(
    String? touristId, {
    _i5.RegistrationStatus? status,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegistrationsByTourist,
          [touristId],
          {
            #status: status,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i5.Registration>>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i5.Registration>>>(
          this,
          Invocation.method(
            #getRegistrationsByTourist,
            [touristId],
            {
              #status: status,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i5.Registration>>>);

  @override
  _i3.Future<_i4.ApiResult<List<_i5.Registration>>> getRegistrationsByTour(
    String? customTourId, {
    _i5.RegistrationStatus? status,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegistrationsByTour,
          [customTourId],
          {
            #status: status,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i3.Future<_i4.ApiResult<List<_i5.Registration>>>.value(
            _i6.dummyValue<_i4.ApiResult<List<_i5.Registration>>>(
          this,
          Invocation.method(
            #getRegistrationsByTour,
            [customTourId],
            {
              #status: status,
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<List<_i5.Registration>>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> approveRegistration(
    String? registrationId, {
    String? notes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveRegistration,
          [registrationId],
          {#notes: notes},
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #approveRegistration,
            [registrationId],
            {#notes: notes},
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> rejectRegistration(
    String? registrationId, {
    required String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectRegistration,
          [registrationId],
          {#reason: reason},
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #rejectRegistration,
            [registrationId],
            {#reason: reason},
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> cancelRegistration(
          String? registrationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelRegistration,
          [registrationId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #cancelRegistration,
            [registrationId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> updateRegistration(
    String? registrationId, {
    String? specialRequirements,
    String? emergencyContactName,
    String? emergencyContactPhone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRegistration,
          [registrationId],
          {
            #specialRequirements: specialRequirements,
            #emergencyContactName: emergencyContactName,
            #emergencyContactPhone: emergencyContactPhone,
          },
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #updateRegistration,
            [registrationId],
            {
              #specialRequirements: specialRequirements,
              #emergencyContactName: emergencyContactName,
              #emergencyContactPhone: emergencyContactPhone,
            },
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> getRegistrationByConfirmationCode(
          String? confirmationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegistrationByConfirmationCode,
          [confirmationCode],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #getRegistrationByConfirmationCode,
            [confirmationCode],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<_i5.Registration>> completeRegistration(
          String? registrationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeRegistration,
          [registrationId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<_i5.Registration>>.value(
            _i6.dummyValue<_i4.ApiResult<_i5.Registration>>(
          this,
          Invocation.method(
            #completeRegistration,
            [registrationId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<_i5.Registration>>);

  @override
  _i3.Future<_i4.ApiResult<Map<String, int>>> getRegistrationStats(
          String? customTourId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegistrationStats,
          [customTourId],
        ),
        returnValue: _i3.Future<_i4.ApiResult<Map<String, int>>>.value(
            _i6.dummyValue<_i4.ApiResult<Map<String, int>>>(
          this,
          Invocation.method(
            #getRegistrationStats,
            [customTourId],
          ),
        )),
      ) as _i3.Future<_i4.ApiResult<Map<String, int>>>);
}
